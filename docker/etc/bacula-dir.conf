#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 15.0.2 (21 March 2024) -- unknown_distro
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#
# Copyright (C) 2000-2022 Kern Sibbald
# License: BSD 2-Clause; see file LICENSE-FOSS
#

Director {                            # define myself
  Name = build-3-22-x86_64-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/etc/bacula/scripts/query.sql"
  WorkingDirectory = "/var/lib/bacula"
  PidDirectory = "/run/bacula"
  Maximum Concurrent Jobs = 20
  Password = "UUE0c1INvpM51w2MBJZE/n1GLjAiFfZPwNE0N22508QZ"         # Console password
  Messages = Daemon
  TLS Enable = no
  TLS Require = no
  TLS Verify Peer = no
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  # Client = build-3-22-x86_64-fd
  FileSet = "Full Set"
  Schedule = "WeeklyCycle"
  Storage = File1
  Messages = Standard
  Pool = Inc-Pool
  Full Backup Pool = Full-Pool
  Incremental Backup Pool = Inc-Pool
  Differential Backup Pool = Diff-Pool
  SpoolAttributes = yes
  Spool Data = no
  Priority = 10
  Write Bootstrap = "/var/lib/bacula/archive/%c.bsr"
}


#Job {
#  Name = "BackupClient1-to-Tape"
#  JobDefs = "DefaultJob"
#  Storage = LTO-4
#  Spool Data = yes    # Avoid shoe-shine
#  Pool = Default
#}

# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Pool = Catalog-Pool
  Full Backup Pool = Catalog-Pool
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  Client = build-3-22-x86_64-fd
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup are:
  #  make_catalog_backup <catalog-name>
  RunBeforeJob = "/opt/bacula/etc/scripts/make_catalog_backup bacula bacula bacula bacula-db postgresql"
  # This deletes the copy of the catalog
  RunAfterJob  = "/opt/bacula/etc/scripts/delete_catalog_backup"
  Write Bootstrap = "/var/lib/bacula/archive/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=build-3-22-x86_64-fd
  Storage = File1
# The FileSet and Pool directives are not used by Restore Jobs
# but must not be removed
  FileSet="Full Set"
  Pool = Full-Pool
  Messages = Standard
  Where = /restores
}


# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = SHA1
      compression = ZSTD
    }
#
#  Put your list of files here, preceded by 'File =', one per line
#    or include an external list with:
#
#    File = <file-name
#
#  Note: / backs up everything on the root partition.
#    if you have other partitions such as /usr or /home
#    you will probably want to add them too.
#
#  By default this is defined to point to the Bacula binary
#    directory to give a reasonable FileSet to backup to
#    disk storage during initial testing.
#
    File = /
    File = /boot
    File = /boot/efi
    File = /opt
    File = /home
  }

#
# If you backup the root directory, the following two excluded
#   files can be useful
#
  Exclude {
    File = /var/lib/bacula
    File = /var/lib/bacula/archive
    File = /cdrom
    File = /dev
    File = /run
    File = /proc
    File = /media
    File = /mnt
    File = /snap
    File = /sys
    File = /tmp
    File = /.journal
    File = /.fsck
  }
}

#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/opt/bacula/working/bacula.sql"
  }
}

# Clients to backup
Client {
  Name = build-3-22-x86_64-fd
  Address = bacula-fd
  FDPort = 9102
  Catalog = MyCatalog
  Password = "wMP56Gu51j5u0K8E3fhqTUubCrrIADyYdz5JvpHxoE2A"          # password for FileDaemon
  File Retention = 1 month
  Job Retention = 2 months
  AutoPrune = yes                     # Prune expired Jobs/Files
}


# Definition of file Virtual Autochanger device
Autochanger {
  Name = File1
  Address = bacula.home.lan                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "y2Lrz5SYq5DpQUL6hy/6cFp9NEsxY6ZEXUJIebKUYlsS"
  Device = FileChgr1
  Media Type = File1
  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
  Autochanger = File1                 # point to ourself
}

# Definition of a second file Virtual Autochanger device
#   Possibly pointing to a different disk drive
#Autochanger {
#  Name = File2
#  Address = bacula.home.lan
#  SDPort = 9103
#  Password = "y2Lrz5SYq5DpQUL6hy/6cFp9NEsxY6ZEXUJIebKUYlsS"
#  Device = FileChgr2
#  Media Type = File2
#  Autochanger = File2                 # point to ourself
#  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
#}

# Definition of LTO-4 tape Autochanger device
#Autochanger {
#  Name = LTO-4
#  Do not use "localhost" here
#  Address = localhost               # N.B. Use a fully qualified name here
#  SDPort = 9103
#  Password = "y2Lrz5SYq5DpQUL6hy/6cFp9NEsxY6ZEXUJIebKUYlsS"         # password for Storage daemon
#  Device = LTO-4                     # must be same as Device in Storage daemon
#  Media Type = LTO-4                 # must be same as MediaType in Storage daemon
#  Autochanger = LTO-4                # enable for autochanger device
#  Maximum Concurrent Jobs = 10
#}

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula";
  DB Address = "bacula-db";
  dbuser = "bacula";
  dbpassword = "bacula"
  DB Port = 5432;
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/opt/bacula/bin/bsmtp -h mail.home.lan -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/opt/bacula/bin/bsmtp -h mail.home.lan -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = alex@ashley-family.net = all, !skipped
  operator = bacula@home.lan = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/opt/bacula/log/bacula.log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/opt/bacula/bin/bsmtp -h mail.home.lan -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = alex@ashley-family.net = all, !skipped
  console = all, !skipped, !saved
  append = "/opt/bacula/log/bacula.log" = all, !skipped
}

# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 6 days
  Label Format = database-
  Maximum Volume Bytes = 150G        # Limit Volume size to something reasonable
  Maximum Volumes = 1                # Limit number of Volumes in Pool
}

Pool {
  Name = Catalog-Pool
  Pool Type = Backup
  Recycle = yes
  Recycle Oldest Volume = yes
  AutoPrune = yes
  Volume Retention = 3 months
  Maximum Volume Jobs = 7
  Label Format = catalog-
  Maximum Volumes = 30
}

Pool {
  Name = Full-Pool
  Pool Type = Backup
  Recycle = yes
  Recycle Oldest Volume = yes
  AutoPrune = yes
  Volume Retention = 3 months
  Maximum Volume Jobs = 1
  Label Format = Full-
  Maximum Volumes = 40
  Maximum Volume Bytes = 50G
}

Pool {
  Name = Diff-Pool
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Recycle Oldest Volume = yes
  Volume Retention = 35 days
  Maximum Volume Jobs = 15
  Label Format = Diff-
  Maximum Volumes = 40
  Maximum Volume Bytes = 50G
}

Pool {
  Name = Inc-Pool
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Recycle Oldest Volume = yes
  Volume Retention = 16 days
  Maximum Volume Jobs = 6
  Label Format = Inc-
  Maximum Volumes = 40
  Maximum Volume Bytes = 50G
}

# File Pool definition
#Pool {
#  Name = File
#  Pool Type = Backup
#  Recycle = yes                       # Bacula can automatically recycle Volumes
#  AutoPrune = yes                     # Prune expired volumes
#  Volume Retention = 365 days         # one year
#  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
#  Maximum Volumes = 100               # Limit number of Volumes in Pool
#  Label Format = "Vol-"               # Auto label
#}


# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = build-3-22-x86_64-mon
  Password = "Zh28bkoy3uP+gXnn3V1cw95+foBWmAUtwW4X5JZ749RY"
  CommandACL = status, .status
}

# Include subfiles associated with configuration of clients.
# # They define the bulk of the Clients, Jobs, and FileSets.
# # Remember to "reload" the Director after adding a client file.
@|"sh -c 'for f in /opt/bacula/etc/clientdefs/*.conf ; do echo @${f} ; done'"
